DROP TABLE IF EXISTS events_history;
DROP TABLE IF EXISTS films_reviews_like;
DROP TABLE IF EXISTS friends_list;
DROP TABLE IF EXISTS film_likes_by_user;
DROP TABLE IF EXISTS film_genre;
DROP TABLE IF EXISTS directors_films;
DROP TABLE IF EXISTS film_reviews;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS MPA;
DROP TABLE IF EXISTS genres;
DROP TABLE IF EXISTS directors;
DROP TABLE IF EXISTS event_operations_types;
DROP TABLE IF EXISTS event_types;

CREATE TABLE IF NOT EXISTS genres (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS directors (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(60) NOT NULL
);

CREATE TABLE IF NOT EXISTS event_operations_types (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(60) NOT NULL
);

CREATE TABLE IF NOT EXISTS event_types (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(60) NOT NULL
);

CREATE TABLE IF NOT EXISTS MPA (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(20) NOT NULL,
    min_age_for_watching INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(50) NOT NULL,
    login VARCHAR(100) NOT NULL,
    name VARCHAR(100),
    birthday DATE CONSTRAINT check_user_birthday CHECK (birthday < CURRENT_DATE())
);

CREATE TABLE IF NOT EXISTS films (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(200),
    release_date DATE NOT NULL CONSTRAINT check_film_release_date CHECK (release_date > '1895-12-28'),
    duration INTEGER NOT NULL CONSTRAINT check_film_duration CHECK (duration > 0),
    mpa_id INTEGER REFERENCES MPA(id)
);

CREATE TABLE IF NOT EXISTS film_reviews (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content VARCHAR(200) NOT NULL,
    is_positive BOOLEAN,
    user_id INTEGER REFERENCES users(id),
    film_id INTEGER REFERENCES films(id),
    useful INTEGER
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id INTEGER REFERENCES films(id),
    genre_id INTEGER REFERENCES genres(id)
);

CREATE TABLE IF NOT EXISTS film_likes_by_user (
    film_id INTEGER REFERENCES films(id),
    user_id INTEGER REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS friends_list(
    user_id INTEGER REFERENCES users(id),
    friend_id INTEGER REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS directors_films(
    film_id INTEGER REFERENCES films(id),
    director_id INTEGER REFERENCES directors(id)
);

CREATE TABLE IF NOT EXISTS events_history(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    event_type_id INTEGER REFERENCES event_types(id),
    operations_type_id INTEGER REFERENCES event_operations_types(id),
    event_id INTEGER NOT NULL,
    date_time TIMESTAMP
);

CREATE TABLE IF NOT EXISTS films_reviews_like(
     review_id INTEGER REFERENCES film_reviews(id),
     user_id INTEGER REFERENCES users(id),
     review_like_count INTEGER
);
